#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIP="$3";
DIR=`dirname "$ZIP"`;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_perm_recursive() {
  dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    chown -R $1.$2 $i; chown -R $1:$2 $i;
    find "$i" -type d -exec chmod $3 {} +;
    find "$i" -type f -exec chmod $4 {} +;
  done;
}
file_getprop() { grep "^$2" "$1" | cut -d= -f2; }
getprop() { test -e /sbin/getprop && /sbin/getprop $1 || file_getprop /default.prop $1; }
abort() { ui_print "$*"; umount /system; umount /data; exit 1; }

show_progress 1.34 4;
ui_print " ";
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIP";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;
bb=/tmp/anykernel/tools/busybox;

ui_print "$(file_getprop /tmp/anykernel/anykernel.sh kernel.string)";
ui_print " ";
ui_print " ";

sleep 1;

ui_print "  ____   _      _   _____   ____  ";
ui_print " |  __| | |    | | |_   _| |  __| ";
ui_print " | |__  | |    | |   | |   | |__  ";
ui_print " |  __| | |    | |   | |   |  __| ";
ui_print " | |__  | |__  | |   | |   | |__  ";
ui_print " |____| |____| |_|   |_|   |____| ";
sleep 1;
ui_print "  __       ________       __  ";
ui_print "  \ ~~~___|   __   |___~~~ /  ";
ui_print "   _----__|__|  |__|__----_   ";
ui_print "   \~~~~~~|__    __|~~~~~~/   ";
ui_print "    ------\  |  |  /------    ";
ui_print "     \_____\ |__| /_____/     ";
ui_print "            \____/            ";
sleep 0.5;
ui_print " ";
ui_print " ";
ui_print "Installing Elite Kernel for Shamu";
ui_print "By Buckmarble & Brymaster5000";
ui_print " ";
sleep 0.25;
ui_print " ";
ui_print "AnyKernel2 by osm0sis @ xda-developers";
ui_print " ";
ui_print "Mounting System";
ui_print " ";
ui_print " ";
mount /system;
mount /data;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  ui_print " ";
  for i in 1 2 3 4 5; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
      ui_print "$testname";
      match=1;
    fi;
  done;
  ui_print " ";
  if [ "$match" != 1 ]; then
    abort "Unsupported device. Aborting...";
  fi;
fi;

ui_print "Pushing Scripts...";
if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.system)" == 1 ]; then
  ui_print " ";
  if [ -d "$system/elite" ]
  then  
    cp -rf /tmp/anykernel/system/elite/* /system/elite/;
    set_perm_recursive 0 0 0755 0755 /system/elite;
  else
    mkdir /system/elite;
    cp -rf /tmp/anykernel/system/elite/* /system/elite/;
    set_perm_recursive 0 0 0755 0755 /system/elite;
  fi;
fi;

ui_print "Cleaning up";
rm /system/etc/init.d/92Elite;
rm /system/su.d/Elite.sh;

sleep 0.25;
ui_print "Installing kernel...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
  rm -rf /tmp/anykernel;
fi;

umount /system;
umount /data;
ui_print " ";
ui_print " ";
sleep 1;
ui_print " ";
ui_print "Kernel Installed";
